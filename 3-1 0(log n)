#include <stdio.h>

// Function to perform binary search
int binarySearch(int nums[], int size, int target) {
    int left = 0;
    int right = size - 1;
    
    while (left <= right) {
        int mid = left + (right - left) / 2;
        
        // Check if target is present at mid
        if (nums[mid] == target) {
            return mid;
        }
        
        // If target is greater, ignore left half
        if (nums[mid] < target) {
            left = mid + 1;
        }
        // If target is smaller, ignore right half
        else {
            right = mid - 1;
        }
    }
    
    // Target is not present in array
    return -1;
}

int main() {
    // Example usage
    int nums1[] = {1, 2, 3, 4, 5, 6, 7, 8, 9};
    int size1 = sizeof(nums1) / sizeof(nums1[0]);
    int target1 = 5;
    int result1 = binarySearch(nums1, size1, target1);
    if (result1 != -1) {
        printf("Element found at index %d\n", result1);
    } else {
        printf("Element not found\n");
    }
    
    int nums2[] = {1, 2, 3, 4, 5, 6, 7, 8, 9};
    int size2 = sizeof(nums2) / sizeof(nums2[0]);
    int target2 = 10;
    int result2 = binarySearch(nums2, size2, target2);
    if (result2 != -1) {
        printf("Element found at index %d\n", result2);
    } else {
        printf("Element not found\n");
    }
    
    return 0;
}
